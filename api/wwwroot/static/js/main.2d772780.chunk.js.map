{"version":3,"sources":["app/api/agent.ts","stores/activityStore.ts","stores/userStore.ts","stores/store.ts","stores/commonStore.ts","stores/modalStore.ts","app/layout/NavBar.tsx","app/layout/LoadingComponent.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivitiesDashboard.tsx","app/common/form/MyTextInput.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/models/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/users/LoginForm.tsx","app/common/form/MyErrorMessage.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","features/activities/details/ActivityDetailHeader.tsx","features/activities/details/ActivityDetailInfo.tsx","features/activities/details/ActivityDetailChat.tsx","features/activities/details/ActivityDetailSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/ValidationErrors.tsx","features/errors/TestErrors.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.ts","index.tsx"],"names":["axios","defaults","baseURL","process","interceptors","request","use","token","store","commonStore","headers","Authorization","response","undefined","error","data","status","config","setServerError","routedHistory","push","method","errors","hasOwnProperty","modalStateErrors","key","length","flat","toast","JSON","stringify","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","Agent","Activities","list","details","id","create","activity","update","toggleAttendance","Account","current","login","user","register","ActivityStore","activityRegistry","Map","loadedAllActivities","editMode","loading","storeActivity","userStore","isGoing","attendees","some","a","username","isHost","hostUsername","host","find","attendee","date","Date","set","ensureActivitiesLoaded","loadActivities","activities","runInAction","forEach","console","log","loadActivity","createOrEditActivity","activityFromServer","uuid","deleteActivity","modifiedActivity","makeAutoObservable","this","Array","from","values","sort","b","getTime","activitiesByDate","reduce","acc","groupKey","format","has","UserStore","getUser","agent","creds","setToken","logout","activityStore","window","localStorage","getItem","appLoaded","setAppLoaded","reaction","setItem","removeItem","modalStore","modal","open","content","close","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","header","as","NavLink","to","exact","src","alt","style","marginRight","name","Button","positive","position","Image","image","avatar","spaced","Dropdown","text","displayName","pointing","Link","icon","onClick","LoadingComponent","Dimmer","active","Loader","profile","Card","Content","Header","Description","extra","Icon","List","horizontal","map","Popup","hoverable","trigger","size","circular","useState","setLoading","Segment","Group","isCancelled","Label","attached","color","textAlign","marginBottom","title","basic","venue","secondary","clearing","description","floated","e","category","useEffect","activitiesGroupedByDate","entries","sub","ActivityFilters","vertical","width","marginTop","Grid","Column","MyTextInput","props","useField","field","meta","Form","Field","touched","label","MyTextArea","MySelectInput","helpers","Select","clearable","options","value","onChange","elem","eve","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useParams","city","setActivity","validationSchema","Yup","required","history","useHistory","initialValues","onSubmit","enableReinitialize","isValid","isSubmitting","dirty","className","autoComplete","placeholder","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","disabled","type","onDone","setErrors","email","password","handleSubmit","render","fluid","MyErrorMessage","isLoggedIn","activityImageStyle","filter","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","border","Comment","Avatar","Author","Metadata","Text","Actions","Action","reply","TextArea","labelPosition","primary","relaxed","divided","Placeholder","Extra","Meta","widths","ValidationErrors","Message","i","TestErrors","validationErrors","setValidationErrors","catch","err","NotFound","Inline","message","Modal","onClose","PrivateRoute","Component","component","rest","location","useLocation","hideProgressBar","path","HomePage","ActivitiesDashboard","ActivityDetails","ActivityForm","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.2d772780.chunk.js","sourcesContent":["import axios, { AxiosError, AxiosResponse } from 'axios'\r\nimport { toast } from 'react-toastify';\r\nimport { routedHistory } from '../..';\r\nimport { store } from '../../stores/store';\r\nimport { Activity, ActivityFormFields } from '../models/activity';\r\nimport { User, UserFormValues } from '../models/user';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\naxios.interceptors.request.use(request => {\r\n  const token = store.commonStore.token;\r\n\r\n  request.headers.Authorization = `Bearer ${token}`;\r\n  return request;\r\n});\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  axios.interceptors.response.use(async response => {\r\n    await sleep(800);\r\n\r\n    return response;\r\n  });\r\n}\r\n\r\naxios.interceptors.response.use(undefined, (error: AxiosError) => {\r\n  const { data, status, config } = error.response!;\r\n\r\n  if (status === 500) {\r\n    store.commonStore.setServerError(data);\r\n    routedHistory.push('server-error');\r\n\r\n  } if (status === 404) {\r\n    routedHistory.push('not-found');\r\n\r\n  } else if (status === 400) {\r\n    if (config.method === 'get' && data?.errors?.hasOwnProperty('id')) {\r\n      routedHistory.push('not-found');\r\n    }\r\n\r\n    if (data && data.errors) {\r\n      var modalStateErrors = [];\r\n\r\n      for (const key in data.errors) {\r\n        if (data.errors[key]) {\r\n          modalStateErrors.push(data.errors[key]);\r\n        }\r\n      }\r\n\r\n      if (modalStateErrors.length > 0) {\r\n        throw modalStateErrors.flat();\r\n      }\r\n    }\r\n  }\r\n\r\n  toast.error(`${status} - ${JSON.stringify(data)}`);\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  delete: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n  list: () => requests.get<Activity[]>(\"/activities\"),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormFields) => requests.post<Activity>(\"/activities\", activity),\r\n  update: (activity: ActivityFormFields) => requests.put<Activity>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.delete(`/activities/${id}`),\r\n  toggleAttendance: (id: string) => requests.post<Activity>(`/activities/${id}/toggle-attendance`, {}),\r\n}\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) => requests.post<User>(\"/account/register\", user),\r\n}\r\n\r\nconst Agent = {\r\n  Activities: Activities,\r\n  Account: Account\r\n};\r\n\r\nexport default Agent;\r\n\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport Agent from \"../app/api/agent\";\r\nimport { Activity, ActivityFormFields } from \"../app/models/activity\";\r\nimport { v4 as uuid } from 'uuid'\r\nimport { format } from \"date-fns\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore {\r\n\r\n  activityRegistry = new Map<string, Activity>()\r\n  loadedAllActivities = false\r\n  editMode = false;\r\n  loading = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  private storeActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some(a => a.username === user.username);\r\n      activity.isHost = user.username === activity.hostUsername;\r\n      activity.host = activity.attendees?.find(attendee => attendee.username === activity.hostUsername)!;\r\n    }\r\n\r\n    activity.date = new Date(activity.date)\r\n    this.activityRegistry.set(activity.id, activity)\r\n  }\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort(\r\n      (a, b) => b.date.getTime() - a.date.getTime());\r\n  }\r\n\r\n  get activitiesGroupedByDate() {\r\n    return this.activitiesByDate.reduce((acc: Map<string, Activity[]>, activity: Activity) => {\r\n\r\n      var groupKey = format(activity.date, 'dd MMM yyyy'); \r\n\r\n      if (!acc.has(groupKey))\r\n        acc.set(groupKey, []);\r\n\r\n      acc.get(groupKey)!.push(activity);\r\n\r\n      return acc;\r\n    }, new Map<string, Activity[]>())\r\n  }\r\n\r\n  ensureActivitiesLoaded = async () => {\r\n    if (this.loadedAllActivities)\r\n      return;\r\n\r\n    await this.loadActivities()\r\n  }\r\n\r\n  loadActivities = async () => {\r\n    try {\r\n      var activities = await Agent.Activities.list();\r\n\r\n      runInAction(() => {\r\n        activities.forEach(a => this.storeActivity(a));\r\n        this.loadedAllActivities = true\r\n      })\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.activityRegistry.get(id);\r\n\r\n    if (activity) {\r\n    } else {\r\n      try {\r\n        activity = await Agent.Activities.details(id);\r\n        this.storeActivity(activity)\r\n      }\r\n      catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n\r\n    return activity;\r\n  }\r\n\r\n  createOrEditActivity = async (activity: ActivityFormFields) => {\r\n    this.loading = true;\r\n\r\n    if (activity.id) {\r\n      try {\r\n        const activityFromServer = await Agent.Activities.update(activity);\r\n\r\n        runInAction(() => {\r\n          this.storeActivity(activityFromServer);\r\n        });\r\n      }\r\n      catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        runInAction(() => {\r\n          this.loading = false;\r\n        });\r\n      }\r\n    }\r\n    else {\r\n      activity.id = uuid();\r\n      try {\r\n        const activityFromServer = await Agent.Activities.create(activity);\r\n        runInAction(() => {\r\n          this.storeActivity(activityFromServer);\r\n        });\r\n      }\r\n      catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        runInAction(() => {\r\n          this.loading = false;\r\n        });\r\n      }\r\n    }\r\n\r\n    return activity.id;\r\n  }\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await Agent.Activities.delete(id);\r\n\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id)\r\n      });\r\n    }\r\n    catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  toggleAttendance = async (id: string) => {\r\n\r\n    this.loading = true;\r\n\r\n    try {\r\n      const modifiedActivity = await Agent.Activities.toggleAttendance(id);\r\n\r\n      if (modifiedActivity) {\r\n        this.storeActivity(modifiedActivity);\r\n      }\r\n    } catch(err) {\r\n      console.log(err);\r\n    } finally {\r\n      runInAction(() => this.loading = false)\r\n    }\r\n  }\r\n}","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport agent from \"../app/api/agent\";\r\nimport { User, UserFormValues } from \"../app/models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => this.user = user);\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds)\r\n\r\n      runInAction(() => {\r\n        store.commonStore.setToken(user.token);\r\n        this.user = user\r\n      })\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    this.user = null;\r\n  }\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds)\r\n\r\n      runInAction(() => {\r\n        store.commonStore.setToken(user.token);\r\n        this.user = user\r\n      })\r\n    } catch (error) {\r\n      throw error;  \r\n    }\r\n  }\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore\r\n  commonStore: CommonStore\r\n  modalStore: ModalStore\r\n  userStore: UserStore\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  modalStore: new ModalStore(),\r\n  userStore: new UserStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n\r\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport ServerError from \"../app/models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem('jwt');\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(() => this.token, token => {\r\n      if (token) {\r\n        window.localStorage.setItem('jwt', token)\r\n      } else {\r\n        window.localStorage.removeItem('jwt')\r\n      }\r\n    });\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  }\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  }\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  }\r\n};","import { makeAutoObservable } from \"mobx\"\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null\r\n  }\r\n\r\n  constructor() {\r\n    makeAutoObservable(this)\r\n  }\r\n\r\n  open = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  }\r\n\r\n  close = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  }\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { routedHistory } from \"../..\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nexport default observer(function NavBar() {\r\n\r\n  const { userStore: { user, logout } } = useStore();\r\n\r\n  function handleLogout() {\r\n    logout();\r\n    routedHistory.push('/')\r\n  }\r\n\r\n  return (\r\n    <Menu inverted fixed=\"top\">\r\n      <Container>\r\n        <Menu.Item header as={NavLink} to=\"/\" exact>\r\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: '10px' }} />\r\n                    Reactivities\r\n                </Menu.Item>\r\n        <Menu.Item name=\"Activities\" as={NavLink} to=\"/activities\" />\r\n        <Menu.Item name=\"Errors\" as={NavLink} to=\"/errors\" />\r\n        <Menu.Item>\r\n          <Button positive content=\"Create Activity\" as={NavLink} to=\"/createActivity\" />\r\n        </Menu.Item>\r\n        <Menu.Item position='right'>\r\n          <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\r\n          <Dropdown text={user?.displayName} pointing='top left'>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item as={Link} to={`/profile/${user?.username}`} text='My Profile' icon='user' />\r\n              <Dropdown.Item onClick={handleLogout} text='logout' icon='power' />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  )\r\n})","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({inverted= true, content = \"Loading...\"} : Props) {\r\n  return (\r\n    <Dimmer active={true} inverted={inverted}>\r\n      <Loader content={content}/>\r\n    </Dimmer>\r\n  );\r\n}","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Icon, Image } from 'semantic-ui-react'\r\nimport { Profile } from '../../app/models/profile'\r\n\r\ninterface Props {\r\n  profile: Profile\r\n}\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || '/assets/user.png'} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>Bio goes here</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name='user' />\r\n        20 followers\r\n      </Card.Content>\r\n    </Card>\r\n  )\r\n})","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { List, Image, Popup } from 'semantic-ui-react'\r\nimport { Profile } from '../../../app/models/profile'\r\nimport ProfileCard from '../../profiles/ProfileCard'\r\n\r\ninterface Props {\r\n  attendees: Profile[]\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({ attendees }: Props) {\r\n  return (\r\n    <List horizontal>\r\n      {\r\n        attendees.map(attendee => (\r\n          <Popup hoverable key={attendee.username}\r\n            trigger={\r\n              <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n                <Image size='mini' circular src={attendee.image || '/assets/user.png'} />\r\n              </List.Item>\r\n            }>\r\n\r\n              <Popup.Content>\r\n                <ProfileCard profile={attendee}/>\r\n              </Popup.Content>\r\n\r\n          </Popup>\r\n        ))\r\n      }\r\n    </List>\r\n  )\r\n})","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { Activity } from '../../../app/models/activity';\r\nimport { useStore } from '../../../stores/store';\r\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\r\n\r\ninterface Props {\r\n  activity: Activity\r\n}\r\n\r\nfunction ActivityListItem({ activity }: Props) {\r\n  const { activityStore } = useStore();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function handleDelete() {\r\n    setLoading(true)\r\n    activityStore.deleteActivity(activity.id).then(() => setLoading(false));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Segment.Group>\r\n        <Segment>\r\n          {activity.isCancelled &&\r\n            <Label attached='top' color='red' style={{ textAlign: 'center' }}>Cancelled</Label>\r\n          }\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image size='tiny' style={{ marginBottom: 3 }} circular src='/assets/user.png' />\r\n              <Item.Content>\r\n                <Item.Header as={Link} to={`/activities/${activity.id}`}>{activity.title}</Item.Header>\r\n                <Item.Description>Hosted by {activity.host.displayName}</Item.Description>\r\n                {activity.isHost && (\r\n                  <Item.Description>\r\n                    <Label basic color='orange'>\r\n                      You are hosting this activity.\r\n                    </Label>\r\n                  </Item.Description>\r\n                )}\r\n                {activity.isGoing && !activity.isHost && (\r\n                  <Item.Description>\r\n                    <Label basic color='green'>\r\n                      You are going to this activity.\r\n                    </Label>\r\n                  </Item.Description>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n        <Segment>\r\n          <span>\r\n            <Icon name='clock' /> {format(activity.date, 'dd MMM yyyy h:mm aa')}\r\n            <Icon name='marker' /> {activity.venue}\r\n          </span>\r\n        </Segment>\r\n        <Segment secondary>\r\n          <ActivityListItemAttendee attendees={activity.attendees} />\r\n        </Segment>\r\n        <Segment clearing>\r\n          <span>{activity.description}</span>\r\n          <Button as={Link} to={`/activities/${activity.id}`} floated='right' color='teal' content='view' />\r\n          {activity.isHost &&\r\n            <Button onClick={(e) => handleDelete()} name={activity.id} loading={loading} floated=\"right\" content=\"Delete\" color=\"red\" />\r\n          }\r\n\r\n          <Label basic content={activity.category} />\r\n        </Segment>\r\n      </Segment.Group>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default observer(ActivityListItem)","import { observer } from \"mobx-react-lite\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport { Header } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../../stores/store\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\n\r\nfunction ActivityList() {\r\n\r\n  const { activityStore } = useStore();\r\n  var [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    activityStore.ensureActivitiesLoaded().then(() => setLoading(false));\r\n  }, [activityStore]);\r\n\r\n  if (loading)\r\n    return <LoadingComponent content=\"Loading activities...\"/>\r\n\r\n  return (\r\n    <>\r\n\r\n      {\r\n        Array.from(activityStore.activitiesGroupedByDate.entries()).map(([date, activities]) => (<Fragment key={date}>\r\n          <Header sub color='teal'>{date}</Header>\r\n          {\r\n            activities.map((activity) => (\r\n              <ActivityListItem activity={activity} key={activity.id} />\r\n            ))\r\n          }\r\n        </Fragment>))\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityList);","import React from 'react'\r\nimport Calendar from 'react-calendar'\r\nimport { Header, Menu } from 'semantic-ui-react'\r\n\r\nexport default function ActivityFilters() {\r\n  return (\r\n    <>\r\n      <Menu vertical size='large' style={{ width: '100%', marginTop: 25 }}>\r\n        <Header icon='filter' attached color='teal' content='filters' />\r\n        <Menu.Item content='All Activities' />\r\n        <Menu.Item content=\"I'm going\" />\r\n        <Menu.Item content=\"I'm hosting\" />\r\n      </Menu>\r\n      <Header></Header>\r\n      <Calendar/>\r\n    </>\r\n  )\r\n}","import React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\n\r\nfunction ActivityDashboard() {\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width=\"10\">\r\n        <ActivityList />\r\n      </Grid.Column>\r\n      <Grid.Column width=\"6\">\r\n        <ActivityFilters/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityDashboard);","import { useField } from 'formik';\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  type?: string;\r\n  label?: string;\r\n}\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error && <Label color='red'>{meta.error}</Label>}\r\n    </Form.Field>\r\n  )\r\n}","import { useField } from 'formik';\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string,\r\n  rows?: number,\r\n  label?: string\r\n}\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error && <Label color='red'>{meta.error}</Label>}\r\n    </Form.Field>\r\n  )\r\n}","import { useField } from 'formik';\r\nimport React from 'react'\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: {text: string, value: string}[];\r\n  label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select clearable options={props.options} \r\n        value={field.value}\r\n        onChange={(elem, eve) => helpers.setValue(eve.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        ></Select>\r\n      {meta.touched && meta.error && <Label color='red'>{meta.error}</Label>}\r\n    </Form.Field>\r\n  )\r\n}","\r\nexport const categoryOptions = [\r\n  { text: 'Drinks', value: 'drinks'},\r\n  { text: 'Culture', value: 'culture'},\r\n  { text: 'Film', value: 'film'},\r\n  { text: 'Food', value: 'food'},\r\n  { text: 'Music', value: 'music'},\r\n  { text: 'Travel', value: 'travel'},\r\n]","import { useField } from 'formik';\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, {ReactDatePickerProps} from 'react-datepicker'\r\n\r\ninterface Props extends Partial<ReactDatePickerProps> {\r\n  name: string,\r\n}\r\n\r\n\r\nexport default function MyDateInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    // couldn't limit error={meta.touched && ...} because touched was false when clearing a date value from the edit screen\r\n    <Form.Field error={!!meta.error}>\r\n      <DatePicker {...field} {...props} \r\n        selected={(field.value && new Date(field.value)) || null} \r\n        onChange={value => helpers.setValue(value) }\r\n        />\r\n      {meta.error && <Label color='red'>{meta.error}</Label>}\r\n    </Form.Field>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\"\r\nimport { Formik, Form } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { ActivityFormFields } from \"../../../app/models/activity\";\r\nimport { useStore } from \"../../../stores/store\";\r\nimport * as Yup from 'yup'\r\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\r\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\r\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\r\nimport { categoryOptions } from \"../../../app/models/categoryOptions\";\r\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\r\n\r\nfunction ActivityForm() {\r\n\r\n  var { id } = useParams<{ id: string }>();\r\n  var { activityStore } = useStore();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormFields>({\r\n    id: '',\r\n    title: '',\r\n    category: '',\r\n    description: '',\r\n    date: null!,\r\n    city: '',\r\n    venue: ''\r\n  });\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required('The activity title is required.'),\r\n    description: Yup.string().required('The activity description is required.'),\r\n    category: Yup.string().required(),\r\n    date: Yup.date().required(\"Date is required.\"),\r\n    city: Yup.string().required(),\r\n    venue: Yup.string().required(),\r\n  });\r\n\r\n  const [loading, setLoading] = useState(!!id);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      activityStore.loadActivity(id).then(a => {\r\n        if (a) setActivity(a)\r\n\r\n        setLoading(false)\r\n      });\r\n    }\r\n  }, [id, activityStore]);\r\n\r\n  if (id && !activity)\r\n    return <LoadingComponent content=\"Loading activity\"></LoadingComponent>\r\n\r\n  if (loading)\r\n    return <LoadingComponent content=\"Loading activity\"></LoadingComponent>\r\n\r\n  function handleFormSubmit(activity: ActivityFormFields) {\r\n    activityStore.createOrEditActivity(activity).then(id => {\r\n      history.push(`/activities/${id}`)\r\n    });\r\n  };\r\n\r\n  // bugbug: if a new activity is clicked while editing form is already open\r\n  // the form is not reset.\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header content='Activity Details' sub color='teal' />\r\n      <Formik initialValues={activity} onSubmit={handleFormSubmit} validationSchema={validationSchema} enableReinitialize>\r\n        {({ isValid, isSubmitting, dirty }) => (\r\n          <Form className='ui form' autoComplete='off'>\r\n            <MyTextInput placeholder=\"Title\" name=\"title\" />\r\n            <MyTextArea placeholder=\"Description\" name=\"description\" rows={3} />\r\n            <MySelectInput placeholder=\"Category\" name=\"category\" options={categoryOptions} />\r\n            <MyDateInput\r\n              placeholderText=\"Date\"\r\n              name=\"date\"\r\n              showTimeSelect\r\n              timeCaption='time'\r\n              dateFormat='MMMM d, yyyy h:mm aa' />\r\n\r\n            <Header content='Location Details' sub color='teal' />\r\n            <MyTextInput placeholder=\"City\" name=\"city\" />\r\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\r\n            <Button\r\n              disabled={isSubmitting || !isValid || !dirty}\r\n              loading={isSubmitting}\r\n              floated=\"right\"\r\n              positive type=\"submit\" content=\"Submit\" />\r\n            <Button as={Link} to={activity.id ? `/activities/${activity.id}` : '/activities'} floated=\"right\" type=\"button\" content=\"Cancel\" />\r\n          </Form>\r\n        )}\r\n\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n\r\n  /*\r\n        <Form onSubmit={handleSubmit}>\r\n        <Form.Input placeholder=\"Title\" value={activity.title} name=\"title\" onChange={handleInputChange} />\r\n        <Form.TextArea placeholder=\"Description\" value={activity.description} name=\"description\" onChange={handleInputChange} />\r\n        <Form.Input placeholder=\"Category\" value={activity.category} name=\"category\" onChange={handleInputChange} />\r\n        <Form.Input type=\"date\" placeholder=\"Date\" value={activity.date} name=\"date\" onChange={handleInputChange} />\r\n        <Form.Input placeholder=\"City\" value={activity.city} name=\"city\" onChange={handleInputChange} />\r\n        <Form.Input placeholder=\"Venue\" value={activity.venue} name=\"venue\" onChange={handleInputChange} />\r\n        <Button loading={activityStore.loading} floated=\"right\" positive type=\"submit\" content=\"Submit\" />\r\n        <Button as={Link} to={activity.id ? `/activities/${activity.id}` : '/activities'} floated=\"right\" type=\"button\" content=\"Cancel\" />\r\n      </Form>\r\n      */\r\n}\r\n\r\nexport default observer(ActivityForm);","import { ErrorMessage, Form, Formik, FormikHelpers } from 'formik'\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Button, Header, Label } from 'semantic-ui-react'\r\nimport { routedHistory } from '../..';\r\nimport MyTextInput from '../../app/common/form/MyTextInput'\r\nimport { useStore } from '../../stores/store';\r\n\r\ninterface Props {\r\n  onDone: () => void\r\n}\r\n\r\ninterface FormikFields {\r\n  email: string;\r\n  password: string;\r\n  error: string | null\r\n}\r\n\r\nexport default observer(function LoginForm({ onDone }: Props) {\r\n\r\n  const { userStore } = useStore();\r\n\r\n  async function handleSubmit(values: FormikFields, { setErrors }: FormikHelpers<FormikFields>) {\r\n    try {\r\n      await userStore.login(values)\r\n      routedHistory.push('/activities')\r\n      onDone();\r\n    } catch {\r\n      setErrors({ error: 'Login failed' });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Formik<FormikFields>\r\n      initialValues={{ email: '', password: '', error: 'null' }}\r\n      onSubmit={handleSubmit}>\r\n\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n          <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center'/>\r\n          <MyTextInput name='email' placeholder='Email' />\r\n          <MyTextInput name='password' placeholder='Password' type='password' />\r\n          <ErrorMessage name='error' render={() => <Label content={errors.error} style={{ marginBottom: 10 }} basic color='red' />} />\r\n          <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n})","import { useField } from 'formik';\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  name: string;\r\n}\r\nexport default function MyErrorMessage(props: Props) {\r\n  const [, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      {meta.touched && meta.error && <Label color='red'>{meta.error}</Label>}\r\n    </Form.Field>\r\n  )\r\n}","import { Form, Formik, FormikHelpers } from 'formik'\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Button, Header } from 'semantic-ui-react'\r\nimport { routedHistory } from '../..';\r\nimport MyTextInput from '../../app/common/form/MyTextInput'\r\nimport { useStore } from '../../stores/store';\r\nimport * as Yup from 'yup'\r\nimport MyErrorMessage from '../../app/common/form/MyErrorMessage';\r\n\r\ninterface Props {\r\n  onDone: () => void\r\n}\r\n\r\ninterface FormikFields {\r\n  displayName: string;\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  error: string | null\r\n}\r\n\r\nexport default observer(function RegisterForm({ onDone }: Props) {\r\n\r\n  const { userStore } = useStore();\r\n\r\n  async function handleSubmit(values: FormikFields, { setErrors }: FormikHelpers<FormikFields>) {\r\n    try {\r\n      await userStore.register(values)\r\n      routedHistory.push('/activities')\r\n      onDone();\r\n    } catch(errors) {\r\n      console.log(errors);\r\n      setErrors({error: errors[0]});\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Formik<FormikFields>\r\n      initialValues={{ displayName: '', username: '', email: '', password: '', error: null }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().email().required(),\r\n        password: Yup.string().required(),\r\n      })}\r\n      onSubmit={handleSubmit}>\r\n\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n          <Header as='h2' content='Create an Account' color='teal' textAlign='center' />\r\n          <MyTextInput name='displayName' placeholder='Display Name' />\r\n          <MyTextInput name='username' placeholder='Username' />\r\n          <MyTextInput name='email' placeholder='Email' />\r\n          <MyTextInput name='password' placeholder='Password' type='password' />\r\n          <MyErrorMessage name='error'/>\r\n          <Button disabled={!isValid || !dirty || isSubmitting} loading={isSubmitting} positive content='Register' type='submit' fluid />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n})","import { observer } from \"mobx-react-lite\"\r\nimport React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Container, Header, Segment, Image, Button } from \"semantic-ui-react\"\r\nimport { useStore } from \"../../stores/store\"\r\nimport LoginForm from \"../users/LoginForm\"\r\nimport RegisterForm from \"../users/RegisterForm\"\r\n\r\nexport default observer(function HomePage() {\r\n\r\n  const { userStore, modalStore } = useStore();\r\n\r\n  return (\r\n    <>\r\n      <Segment inverted textAlign='center' vertical className='masthead'>\r\n        <Container text>\r\n          <Header as='h1' inverted>\r\n            <Image size='massive' src='/assets/logo.png' alt='logo' style={{ marginBottom: 12 }} />\r\n            Reactivities\r\n          </Header>\r\n          {\r\n            userStore.isLoggedIn ? (\r\n              <>\r\n                <Header as='h2' inverted content='Welcome to Reactivities' />\r\n                <Button as={Link} to='/activities' size='huge' inverted content='Go to Activities!' />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Header as='h2' inverted content='Welcome to Reactivities' />\r\n                <Button onClick={() => modalStore.open(<LoginForm onDone={modalStore.close} />)} size='huge' inverted content='Login' />\r\n                <Button onClick={() => modalStore.open(<RegisterForm onDone={modalStore.close} />)} size='huge' inverted content='Register' />\r\n              </>\r\n            )\r\n          }\r\n        </Container>\r\n      </Segment>\r\n    </>)\r\n})","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Item, Segment, Image, Label } from 'semantic-ui-react'\r\nimport { Activity } from \"../../../app/models/activity\";\r\nimport { useStore } from '../../../stores/store';\r\n\r\nconst activityImageStyle = {\r\n  filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: 'absolute',\r\n  bottom: '5%',\r\n  left: '5%',\r\n  width: '100%',\r\n  height: 'auto',\r\n  color: 'white'\r\n};\r\n\r\ninterface Props {\r\n  activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailHeader({ activity }: Props) {\r\n\r\n  const { activityStore: { toggleAttendance, loading } } = useStore();\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached='top' style={{ padding: '0' }}>\r\n        {\r\n          activity.isCancelled &&\r\n          <Label style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }} ribbon color='red' content='Cancelled' />\r\n        }\r\n        <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\r\n        <Segment style={activityImageTextStyle} basic>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size='huge'\r\n                  content={activity.title}\r\n                  style={{ color: 'white' }}\r\n                />\r\n                <p>{format(activity.date, 'dd MMM yyyy h:mm aa')}</p>\r\n                <p>\r\n                  Hosted by <strong><Link to={`/profile/${activity.host.username}`}>{activity.host.displayName}</Link></strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached='bottom'>\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button color={activity.isCancelled ? 'green' : 'red'}\r\n              floated='left' basic\r\n              content={activity.isCancelled ? 'Uncancel Activity' : 'Cancel Activity'}\r\n              onClick={() => toggleAttendance(activity.id)}\r\n              loading={loading}/>\r\n            <Button as={Link} to={`/manage/${activity.id}`} color='orange' floated='right'>\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        )\r\n          : activity.isGoing ? (\r\n            <Button onClick={() => toggleAttendance(activity.id)} loading={loading}>Cancel attendance</Button>\r\n          ) : (\r\n            <Button color='teal' \r\n              onClick={() => toggleAttendance(activity.id)}\r\n              disabled={activity.isCancelled}\r\n              loading={loading}>Join Activity</Button>\r\n          )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  )\r\n})","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Segment, Grid, Icon } from 'semantic-ui-react'\r\nimport { Activity } from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n  activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached='top'>\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size='large' color='teal' name='info' />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign='middle'>\r\n          <Grid.Column width={1}>\r\n            <Icon name='calendar' size='large' color='teal' />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>\r\n              {format(activity.date, 'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign='middle'>\r\n          <Grid.Column width={1}>\r\n            <Icon name='marker' size='large' color='teal' />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>{activity.venue}, {activity.city}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  )\r\n})","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Segment, Header, Comment, Form, Button } from 'semantic-ui-react'\r\n\r\nexport default observer(function ActivityDetailChat() {\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign='center'\r\n        attached='top'\r\n        inverted\r\n        color='teal'\r\n        style={{ border: 'none' }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Comment.Group>\r\n          <Comment>\r\n            <Comment.Avatar src='/assets/user.png' />\r\n            <Comment.Content>\r\n              <Comment.Author as='a'>Matt</Comment.Author>\r\n              <Comment.Metadata>\r\n                <div>Today at 5:42PM</div>\r\n              </Comment.Metadata>\r\n              <Comment.Text>How artistic!</Comment.Text>\r\n              <Comment.Actions>\r\n                <Comment.Action>Reply</Comment.Action>\r\n              </Comment.Actions>\r\n            </Comment.Content>\r\n          </Comment>\r\n\r\n          <Comment>\r\n            <Comment.Avatar src='/assets/user.png' />\r\n            <Comment.Content>\r\n              <Comment.Author as='a'>Joe Henderson</Comment.Author>\r\n              <Comment.Metadata>\r\n                <div>5 days ago</div>\r\n              </Comment.Metadata>\r\n              <Comment.Text>Dude, this is awesome. Thanks so much</Comment.Text>\r\n              <Comment.Actions>\r\n                <Comment.Action>Reply</Comment.Action>\r\n              </Comment.Actions>\r\n            </Comment.Content>\r\n          </Comment>\r\n\r\n          <Form reply>\r\n            <Form.TextArea />\r\n            <Button\r\n              content='Add Reply'\r\n              labelPosition='left'\r\n              icon='edit'\r\n              primary\r\n            />\r\n          </Form>\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n\r\n  )\r\n})","import React from 'react'\r\nimport { Segment, List, Label, Item, Image, Placeholder } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/models/activity'\r\n\r\ninterface Props {\r\n  activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailSidebar({ activity: { attendees, hostUsername }}: Props) {\r\n\r\n  return (\r\n    <>\r\n      <Segment\r\n        textAlign='center'\r\n        style={{ border: 'none' }}\r\n        attached='top'\r\n        secondary\r\n        inverted\r\n        color='teal'\r\n      >\r\n        {attendees.length} {attendees.length > 1 ? 'People' : 'Person'} going\r\n            </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {\r\n            attendees.map(attendee => (\r\n              <Item key={attendee.username} style={{ position: 'relative' }}>\r\n                {(attendee.username === hostUsername) ? (\r\n                  <Label\r\n                    style={{ position: 'absolute' }}\r\n                    color='orange'\r\n                    ribbon='right'\r\n                    content='Host' />) : (\r\n                  <Placeholder/>\r\n                  )}\r\n\r\n                <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n                <Item.Content verticalAlign='middle'>\r\n                  <Item.Header as='h3'>\r\n                    <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                  </Item.Header>\r\n                  <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\r\n                </Item.Content>\r\n              </Item>\r\n            ))\r\n          }\r\n        </List>\r\n      </Segment>\r\n    </>\r\n\r\n  )\r\n})","import React, { useEffect, useState } from \"react\"\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button, Card, Grid, Image } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../stores/store\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport ActivityDetailHeader from \"./ActivityDetailHeader\";\r\nimport ActivityDetailInfo from \"./ActivityDetailInfo\";\r\nimport ActivityDetailChat from \"./ActivityDetailChat\";\r\nimport ActivityDetailSidebar from \"./ActivityDetailSidebar\";\r\nimport { format } from \"date-fns\";\r\n\r\nfunction ActivityDetails() {\r\n\r\n  var { id } = useParams<{ id: string }>();\r\n  var { activityStore } = useStore();\r\n  var [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (!id) {\r\n      setLoading(false);\r\n    }\r\n    else {\r\n      activityStore.loadActivity(id).then(() => setLoading(false));\r\n    }\r\n  }, [id, activityStore]);\r\n\r\n  var activity = activityStore.activityRegistry.get(id);\r\n\r\n  if (loading || !activity)\r\n    return <LoadingComponent content=\"Loading activity\"></LoadingComponent>\r\n\r\n  return (\r\n    <>\r\n      <Grid>\r\n        <Grid.Column width={10}>\r\n          <ActivityDetailHeader activity={activity} />\r\n          <ActivityDetailInfo activity={activity} />\r\n          <ActivityDetailChat />\r\n        </Grid.Column>\r\n        <Grid.Column width={6}>\r\n          <ActivityDetailSidebar activity={activity}/>\r\n        </Grid.Column>\r\n\r\n      </Grid>\r\n\r\n      <Card fluid>\r\n        <Image src={`/assets/categoryImages/${activity.category}.jpg`} />\r\n        <Card.Content>\r\n          <Card.Header>{activity.title}</Card.Header>\r\n          <Card.Meta>\r\n            <span>{format(activity.date, 'dd MMM yyyy h:mm aa')}</span>\r\n          </Card.Meta>\r\n          <Card.Description>\r\n            {activity.description}\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <Button.Group widths=\"2\">\r\n            <Button basic as={Link} to={`/manage/${activity.id}`} color=\"blue\" content=\"Edit\" />\r\n            <Button basic as={Link} to='/activities' color=\"grey\" content=\"Cancel\" />\r\n          </Button.Group>\r\n        </Card.Content>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityDetails);","import React from 'react'\r\nimport { Message } from 'semantic-ui-react'\r\n\r\ninterface Props {\r\n  errors: string[]\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && <Message.List>\r\n        {errors.map((e, i) => (\r\n          <Message.Item key={i}>{e}</Message.Item>\r\n        ))}\r\n      </Message.List>}\r\n    </Message>\r\n  )\r\n}\r\n\r\nexport function ValidationError(props: { error: string | null | undefined }) {\r\n  return (\r\n    <Message error>\r\n      {props.error && <Message.List>\r\n        <Message.Item>{props.error}</Message.Item>\r\n      </Message.List>}\r\n    </Message>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationErrors';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\nexport default function TestErrors() {\r\n    const [validationErrors, setValidationErrors] = useState<string[]>();\r\n\r\n    function handleNotFound() {\r\n        axios.get('buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get('buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get('buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get('buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get('activities/notaguid').catch(err => console.log(err));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post('activities', {}).catch(e => {\r\n          console.log(e);\r\n          setValidationErrors(e);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {validationErrors && <ValidationErrors errors={validationErrors}/> }\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n       <Icon name='search'/>\r\n       Not found\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to='/activities' primary>\r\n          Return to activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  )\r\n}","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\n\r\nexport default observer(function ServerError() {\r\n\r\n  const { commonStore } = useStore();\r\n\r\n  return (\r\n    <Container>\r\n      <Header as='h1' content='Server Error'></Header>\r\n      <Header sub as='h5' color='red' content={commonStore.error?.message}/>\r\n      {\r\n        commonStore.error?.details && <Segment>\r\n          <Header as='h4' color='teal' content='StackTrace'/>\r\n          <code style={{'marginTop': '10px'}}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      }\r\n    </Container>\r\n  )\r\n})","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../../stores/store';\r\n\r\nexport default observer(function ModalContainer() {\r\n\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n    <Modal open={modalStore.modal.open} onClose={modalStore.close} size='mini'>\r\n      <Modal.Content>\r\n        {modalStore.modal.body}\r\n      </Modal.Content>\r\n    </Modal>\r\n  );\r\n})","import { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>\r\n\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const { userStore: { isLoggedIn } } = useStore();\r\n\r\n  return (\r\n    <Route {...rest}\r\n      render={(props) => isLoggedIn ? <Component {...props} /> : <Redirect to='/' />}\r\n    />\r\n  )\r\n}","import React, { useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivitiesDashboard from '../../features/activities/dashboard/ActivitiesDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router-dom';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestErrors';\nimport { ToastContainer } from 'react-toastify'\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport { useStore } from '../../stores/store';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().then(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded()\n    }\n  }, [commonStore, userStore])\n\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />\n\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Switch>\n        <Route exact path='/' component={HomePage} />\n        <Route>\n          <NavBar />\n          <Container style={{ marginTop: '7em' }}>\n            <Switch>\n              <PrivateRoute exact path='/activities' component={ActivitiesDashboard} />\n              <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n              <PrivateRoute key={location.key} path={['/createActivity', '/manage/:id']} component={ActivityForm} />\n              <PrivateRoute path='/errors' component={TestErrors} />\n              <Route path='/server-error' component={ServerError} />\n              <Route component={NotFound} exact />\n            </Switch>\n          </Container>\n        </Route>\n      </Switch>\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname])\r\n\r\n  return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'react-calendar/dist/Calendar.css'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './stores/store';\nimport { Router } from 'react-router-dom';\nimport {createBrowserHistory} from 'history'\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const routedHistory = createBrowserHistory();\n\nReactDOM.render(\n  //<React.StrictMode>\n  <StoreContext.Provider value={store}>\n    <Router history={routedHistory}>\n      <ScrollToTop/>\n      <App />\n    </Router>\n  </StoreContext.Provider>\n  //</React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}